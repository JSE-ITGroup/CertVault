@model CertVault.Models.DBModels.Certificate

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Certificate</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CertificateNumber)

        @Html.HiddenFor(model => model.MemberID)

        @Html.HiddenFor(model => model.SymbolIsin)
        @Html.HiddenFor(model => model.CreatedAt)
        @Html.HiddenFor(model => model.CreatedBy)
        @Html.HiddenFor(model => model.ApprovedAt)
        @Html.HiddenFor(model => model.ApprovedBy)
        @Html.HiddenFor(model => model.WithdrawRequestAt)
        @Html.HiddenFor(model => model.WithdrawRequestBy)
        @Html.HiddenFor(model => model.WithdrawApprovedAt)
        @Html.HiddenFor(model => model.WithdrawApprovedBy)
            

        <div class="form-group">
            @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status,new { htmlAttributes = new { @class = "form-control"} })
                @*@Html.DropDownListFor(model => model.Status, (IEnumerable<SelectListItem>)ViewBag.Status, "SELECT STATUS", htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control", Value = DateTime.Now, @readonly = "read-only" } })
                @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
